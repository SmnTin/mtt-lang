kind  term  type.

type  app   term -> term -> term.
type  fun   (term -> term) -> term.

pred whd i:term, o:term.

% when the head "Hd" of an "app" (lication) is a "fun" we substitute
% and continue
whd (app Hd Arg) Reduct :- whd Hd (fun F), !,
  whd (F Arg) Reduct.

% otherwise a term X is already in normal form.
whd X Reduct :- Reduct = X.

type foo, bar term.
